// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/mfinancecombr/finance-wallet-api"
        },
        "license": {
            "name": "BSD 3-Clause",
            "url": "https://opensource.org/licenses/BSD-3-Clause"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/brokers": {
            "get": {
                "description": "get all brokers data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all brokers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/wallet.Broker"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "insert new broker",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert some broker",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/brokers/{id}": {
            "get": {
                "description": "get all broker data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a broker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Broker id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.Broker"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Update some broker by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update broker data by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Broker id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete some broker by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete broker by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Broker id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/certificates-of-deposit/operations": {
            "post": {
                "description": "insert new certificate of deposit operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert some certificate of deposit operation",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/certificates-of-deposit/operations/{id}": {
            "get": {
                "description": "get certificate of deposit operation data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get get certificate of deposit operation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.CertificateOfDeposit"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "update new certificate of deposit operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update some certificate of deposit operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/ficfi/operations": {
            "post": {
                "description": "insert new FICFI operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert some FICFI operation",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/ficfi/operations/{id}": {
            "get": {
                "description": "get FICFI operation data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get FICFI operation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.FICFI"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "update new FICFI operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update some FICFI operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/fiis/operations": {
            "post": {
                "description": "insert new FII operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert some FII operation",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/fiis/operations/{id}": {
            "get": {
                "description": "get FII operation data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get FII operation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.FII"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "update new FII operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update some FII operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/operations": {
            "get": {
                "description": "get all operations data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all operations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/operations/{id}": {
            "delete": {
                "description": "delete some operation by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete operation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/portfolios": {
            "get": {
                "description": "get all portfolio data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all portfolios",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filter by year",
                        "name": "year",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/wallet.Portfolio"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "insert new portfolio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert some portfolio",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/portfolios/{id}": {
            "get": {
                "description": "get all portfolio data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a portfolio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Broker id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter by year",
                        "name": "year",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.Portfolio"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Update some portfolio by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update portfolio data by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Portfolio id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.Portfolio"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete some portfolio by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete portfolio by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Portfolio id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/purchases": {
            "get": {
                "description": "get all purchases operations data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all purchases operations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/sales": {
            "get": {
                "description": "get all sales operations data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all sales operations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/stocks-funds/operations": {
            "post": {
                "description": "insert new stocks fund operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert some stocks fund operation",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/stocks-funds/operations/{id}": {
            "get": {
                "description": "get stocks fund operation data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get stocks fund operation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.StockFund"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "update new stocks fund operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update some stocks fund operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/stocks/operations": {
            "post": {
                "description": "insert new stocks operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert some stocks operation",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/stocks/operations/{id}": {
            "get": {
                "description": "get stocks operation data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get stocks operation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.Stock"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "update new stocks operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update some stocks operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/treasuries-direct/operations": {
            "post": {
                "description": "insert new treasury direct operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Insert some treasury direct operation",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/treasuries-direct/operations/{id}": {
            "get": {
                "description": "get treasury direct  operation data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get treasury direct operation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.TreasuryDirect"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "update new treasury direct operation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update some treasury direct operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Operation id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "wallet.Broker": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "CNPJ": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "wallet.CertificateOfDeposit": {
            "type": "object",
            "required": [
                "brokerId",
                "date",
                "dueDate",
                "fixedInterestRate",
                "itemType",
                "portfolioId",
                "price",
                "shares",
                "symbol",
                "type"
            ],
            "properties": {
                "brokerId": {
                    "type": "string"
                },
                "commission": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                },
                "fixedInterestRate": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "itemType": {
                    "type": "string"
                },
                "portfolioId": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "shares": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "wallet.FICFI": {
            "type": "object",
            "required": [
                "brokerId",
                "date",
                "itemType",
                "portfolioId",
                "price",
                "shares",
                "symbol",
                "type"
            ],
            "properties": {
                "brokerId": {
                    "type": "string"
                },
                "commission": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "itemType": {
                    "type": "string"
                },
                "portfolioId": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "shares": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "wallet.FII": {
            "type": "object",
            "required": [
                "brokerId",
                "date",
                "itemType",
                "portfolioId",
                "price",
                "shares",
                "symbol",
                "type"
            ],
            "properties": {
                "brokerId": {
                    "type": "string"
                },
                "commission": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "itemType": {
                    "type": "string"
                },
                "portfolioId": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "shares": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "wallet.OperationsList": {
            "type": "array",
            "items": {
                "type": "object"
            }
        },
        "wallet.Portfolio": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "costBasics": {
                    "type": "number"
                },
                "gain": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/wallet.PortfolioItem"
                    }
                },
                "name": {
                    "type": "string"
                },
                "overallReturn": {
                    "type": "number"
                }
            }
        },
        "wallet.PortfolioItem": {
            "type": "object",
            "properties": {
                "averagePrice": {
                    "type": "number"
                },
                "brokerId": {
                    "type": "string"
                },
                "change": {
                    "type": "number"
                },
                "closingPrice": {
                    "type": "number"
                },
                "commission": {
                    "type": "number"
                },
                "costBasics": {
                    "type": "number"
                },
                "gain": {
                    "type": "number"
                },
                "itemType": {
                    "type": "string"
                },
                "lastPrice": {
                    "type": "number"
                },
                "lastYearHigh": {
                    "type": "number"
                },
                "lastYearLow": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "operations": {
                    "type": "object",
                    "$ref": "#/definitions/wallet.OperationsList"
                },
                "overallReturn": {
                    "type": "number"
                },
                "sector": {
                    "type": "string"
                },
                "segment": {
                    "type": "string"
                },
                "shares": {
                    "type": "number"
                },
                "subSector": {
                    "type": "string"
                }
            }
        },
        "wallet.Stock": {
            "type": "object",
            "required": [
                "brokerId",
                "date",
                "itemType",
                "portfolioId",
                "price",
                "shares",
                "symbol",
                "type"
            ],
            "properties": {
                "brokerId": {
                    "type": "string"
                },
                "commission": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "itemType": {
                    "type": "string"
                },
                "portfolioId": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "shares": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "wallet.StockFund": {
            "type": "object",
            "required": [
                "brokerId",
                "date",
                "itemType",
                "portfolioId",
                "price",
                "shares",
                "symbol",
                "type"
            ],
            "properties": {
                "brokerId": {
                    "type": "string"
                },
                "commission": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "itemType": {
                    "type": "string"
                },
                "portfolioId": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "shares": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "wallet.TreasuryDirect": {
            "type": "object",
            "required": [
                "brokerId",
                "date",
                "fixedInterestRate",
                "itemType",
                "portfolioId",
                "price",
                "shares",
                "symbol",
                "type"
            ],
            "properties": {
                "brokerId": {
                    "type": "string"
                },
                "commission": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "fixedInterestRate": {
                    "description": "DueDate           *time.Time ` + "`" + `json:\"dueDate\" bson:\"dueDate\" validate:\"required\"` + "`" + `",
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "itemType": {
                    "type": "string"
                },
                "portfolioId": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "shares": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1.0",
	Host:        "localhost:8889",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "MFinance Wallet API",
	Description: "mfinance Wallet API data.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
